var searchIndex = JSON.parse('{\
"envmnt":{"doc":"envmnt","t":[6,6,6,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,13,6,3,4,3,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ExpandOptions","ExpansionType","ListOptions","checkpoint","contains","contains_ignore_case","decrement","errors","evaluate_and_load_file","evaluate_and_set_all","exists","expand","get_any","get_f32","get_f64","get_i128","get_i16","get_i32","get_i64","get_i8","get_isize","get_list","get_list_with_options","get_or","get_or_panic","get_parse","get_parse_or","get_remove","get_set","get_u128","get_u16","get_u32","get_u64","get_u8","get_usize","increment","is","is_all_exists","is_any_exists","is_equal","is_or","load_file","parse_env_file_content","parse_file","remove","remove_all","set","set_all","set_bool","set_f32","set_f64","set_i128","set_i16","set_i32","set_i64","set_i8","set_isize","set_list","set_list_with_options","set_optional","set_or_remove","set_u128","set_u16","set_u32","set_u64","set_u8","set_usize","types","vars","EnvmntError","InvalidType","Missing","ReadFile","borrow","borrow_mut","fmt","fmt","from","into","source","to_string","try_from","try_into","type_id","0","0","0","1","All","EnvmntResult","ExpandOptions","ExpansionType","ListOptions","OS","Unix","UnixBrackets","UnixBracketsWithDefaults","UnixPrefix","Windows","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_with_expansion_type","default","default_to_empty","eq","expansion_type","fmt","fmt","fmt","from","from","from","ignore_empty","into","into","into","new","new","separator","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["envmnt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","envmnt::errors","","","","","","","","","","","","","","","envmnt::errors::EnvmntError","","","","envmnt::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Expand options","Expansion Type - unix/windows style","Get/Set list options","Create a new checkpoint, for the current environment of …","Returns true if the provided environment variable is …","Returns true if the provided environment variable is …","Decrements and returns the new value stored by the given …","errors","Parses the provided env file and loads all environment …","Sets all the provided env key/value pairs.","Returns true environment variable is defined.","Expands the provided string value by replacing the …","Returns the first environment variable found.","Returns the environment variable value or a default value …","Returns the environment variable value or a default value …","Returns the environment variable value or a default value …","Returns the environment variable value or a default value …","Returns the environment variable value or a default value …","Returns the environment variable value or a default value …","Returns the environment variable value or a default value …","Returns the environment variable value or a default value …","Returns the requested environment variable as a string …","Returns the requested environment variable as a string …","Returns the environment variable value or if is not …","Returns the environment variable value. If the variable is …","Returns the parsed environment variable value.","Returns the parsed environment variable value or if is not …","Removes the provided environment variable and returns its …","Sets the environment variable value and returns the …","Returns the environment variable value or a default value …","Returns the environment variable value or a default value …","Returns the environment variable value or a default value …","Returns the environment variable value or a default value …","Returns the environment variable value or a default value …","Returns the environment variable value or a default value …","Increments and returns the new value stored by the given …","Returns false if environment variable value if falsy. The …","Returns true if all of environment variables are defined.","Returns true if any of environment variables is defined.","Returns true if the provided environment variable is …","Returns false if environment variable value if falsy. Any …","Parses the provided env file and loads all environment …","Parses the provided content as a map of key/value. The …","Parses the provided env file and returns its content as a …","Removes the provided environment variable.","Removes all provided environment variables.","Sets the environment variable value.","Sets all the provided env key/value pairs.","Sets the environment variable with a true/false value as …","Sets the environment variable value.","Sets the environment variable value.","Sets the environment variable value.","Sets the environment variable value.","Sets the environment variable value.","Sets the environment variable value.","Sets the environment variable value.","Sets the environment variable value.","Sets the provided string vector as an environment variable.","Sets the provided string vector as an environment variable.","Sets the environment variable if the provided option …","Sets the environment variable if the provided option …","Sets the environment variable value.","Sets the environment variable value.","Sets the environment variable value.","Sets the environment variable value.","Sets the environment variable value.","Sets the environment variable value.","types","Returns all environment variables as a vector.","Enumeration of possible errors emitted in this library","Environment variable has not a compatible type","Environment variable not found","File not found error","","","Formats the value using the given formatter.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","All supported styles for all platforms (not including …","Envmt Library Result","Expand options","Expansion Type - unix/windows style","Get/Set list options","Current OS supported styles (Unix/Windows)","All unix supported styles","Unix brackets environment style, for example: ${MY_ENV}","Unix brackets like format with default value support …","Unix prefix environment style, for example: $MY_ENV","Windows environment style, for example: %MY_ENV%","","","","","","","","","","","","","Clones and modifies the expansion type","","If true (default), empty variables will be replaced with …","","The expansion type (unix/windows/…)","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","if true, empty list will not be set and empty string will …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates and returns a new instance.","Creates and returns a new instance.","The separator used to merge/split the values","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,36,37,38,36,34,0,0,0,0,34,34,34,34,34,34,33,34,35,33,34,35,33,34,35,33,34,35,35,33,35,34,35,33,34,35,33,34,35,33,33,34,35,33,35,33,33,34,35,33,34,35,33,34,35,33,34,35],"f":[0,0,0,0,[[[2,[1]],3],4],[[[2,[1]],3],4],[[[2,[1]]],5],0,[3,6],[7],[[[2,[1]]],4],[[3,[9,[8]]],10],[[11,3],10],[[[2,[1]],12],12],[[[2,[1]],13],13],[[[2,[1]],14],14],[[[2,[1]],15],15],[[[2,[1]],16],16],[[[2,[1]],17],17],[[[2,[1]],18],18],[[[2,[1]],5],5],[[[2,[1]]],[[9,[[11,[10]]]]]],[[[2,[1]],19],[[9,[[11,[10]]]]]],[[[2,[1]],3],10],[[[2,[1]]],10],[[],6],[[],6],[[[2,[1]]],[[9,[10]]]],[[[2,[1]],[2,[1]]],[[9,[10]]]],[[[2,[1]],20],20],[[[2,[1]],21],21],[[[2,[1]],22],22],[[[2,[1]],23],23],[[[2,[1]],24],24],[[[2,[1]],25],25],[[[2,[1]]],5],[[[2,[1]]],4],[11,4],[11,4],[[[2,[1]],3],4],[[[2,[1]],4],4],[3,6],[3,[[7,[10,10]]]],[3,[[6,[[7,[10,10]]]]]],[[[2,[1]]]],[11],[[[2,[1]],[2,[1]]]],[7],[[[2,[1]],4]],[[[2,[1]],12]],[[[2,[1]],13]],[[[2,[1]],14]],[[[2,[1]],15]],[[[2,[1]],16]],[[[2,[1]],17]],[[[2,[1]],18]],[[[2,[1]],5]],[[[2,[1]],11]],[[[2,[1]],11,19]],[[[2,[1]],9],4],[[[2,[1]],9],4],[[[2,[1]],20]],[[[2,[1]],21]],[[[2,[1]],22]],[[[2,[1]],23]],[[[2,[1]],24]],[[[2,[1]],25]],0,[[],11],0,0,0,0,[[]],[[]],[[26,27],[[29,[28]]]],[[26,27],30],[[]],[[]],[26,[[9,[31]]]],[[],10],[[],29],[[],29],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[33,33],[34,34],[35,35],[[]],[[]],[[]],[[35,34],35],[[],33],0,[[34,34],4],0,[[33,27],30],[[34,27],30],[[35,27],30],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],33],[[],35],0,[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],32],[[],32],[[],32]],"p":[[3,"OsStr"],[8,"AsRef"],[15,"str"],[15,"bool"],[15,"isize"],[6,"EnvmntResult"],[3,"IndexMap"],[6,"ExpandOptions"],[4,"Option"],[3,"String"],[3,"Vec"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[6,"ListOptions"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u8"],[15,"usize"],[4,"EnvmntError"],[3,"Formatter"],[3,"Error"],[4,"Result"],[6,"Result"],[8,"Error"],[3,"TypeId"],[3,"ListOptions"],[4,"ExpansionType"],[3,"ExpandOptions"],[13,"ReadFile"],[13,"Missing"],[13,"InvalidType"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
